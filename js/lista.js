// Generated by CoffeeScript 2.7.0
var indexOf = [].indexOf;

import {
  g,
  print,
  range,
  scalex,
  scaley
} from './globals.js';

export var Lista = class Lista {
  constructor(objects = [], columnTitles = "", buttons = {}, drawFunction = null) { // a list of players. Or a list of pairs of players
    this.objects = objects;
    this.columnTitles = columnTitles;
    this.buttons = buttons;
    this.drawFunction = drawFunction;
    this.offset = 0;
    this.currentRow = 0;
    this.N = this.objects.length;
    this.paintYellowRow = true;
    this.errors = []; // list with index of erroneous rows
  }

  draw() { // ritar de rader som syns i f√∂nstret enbart
    var i, iRow, len, p, r, ref, results, s, w, y;
    y = 4;
    s = this.columnTitles;
    fill('white');
    textAlign(window.LEFT);
    text(s, 10, scaley(y));
    fill('black');
    r = g.tournament.round - 1;
    ref = range(this.offset, this.offset + g.LPP);
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      iRow = ref[i];
      if (iRow >= this.N) {
        continue;
      }
      p = this.objects[iRow];
      y++;
      s = this.drawFunction(p, iRow);
      if (iRow === this.currentRow) {
        fill('yellow');
        w = this.paintYellowRow ? width : scaley(23.4);
        rect(0, scaley(y - 0.5), w, scaley(1));
        fill('black');
      }
      fill(indexOf.call(this.errors, iRow) >= 0 ? 'red' : 'black');
      results.push(text(s, 10, scaley(y)));
    }
    return results;
  }

  keyPressed(event, key) {
    return this.buttons[key].click();
  }

  //	mouseWheel : (event) -> @move if event.delta < 0 then -g.LPP//2 else g.LPP//2
  mouseWheel(event) {
    return this.move(event.delta < 0 ? -1 : 1);
  }

  mousePressed() {
    var button, key, ref, results;
    if (mouseY > scaley(4)) {
      return this.currentRow = this.offset + int(mouseY / g.ZOOM[g.state] - 4.5);
    } else {
      ref = this.buttons;
      results = [];
      for (key in ref) {
        button = ref[key];
        if (button.active && button.inside(mouseX, mouseY)) {
          results.push(button.click());
        } else {
          results.push(void 0);
        }
      }
      return results;
    }
  }

  ArrowUp() {
    return this.move(-1);
  }

  ArrowDown() {
    return this.move(1);
  }

  PageUp() {
    return this.move(Math.floor(-g.LPP / 2));
  }

  PageDown() {
    return this.move(Math.floor(g.LPP / 2));
  }

  Home() {
    return this.move(-this.currentRow);
  }

  End() {
    return this.move(this.N - this.currentRow);
  }

  move(delta) {
    this.currentRow += delta;
    if (this.currentRow < 0) {
      this.currentRow = 0;
    }
    if (this.currentRow >= this.N) {
      this.currentRow = this.N - 1;
    }
    if (this.currentRow < this.offset) {
      this.offset = this.currentRow;
    }
    if (this.currentRow >= this.offset + g.LPP) {
      this.offset = this.currentRow - g.LPP + 1;
    }
    return event.preventDefault();
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdGEuanMiLCJzb3VyY2VSb290IjoiLi5cXCIsInNvdXJjZXMiOlsiY29mZmVlXFxsaXN0YS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUE7O0FBQUEsT0FBQTtFQUFTLENBQVQ7RUFBVyxLQUFYO0VBQWlCLEtBQWpCO0VBQXVCLE1BQXZCO0VBQThCLE1BQTlCO0NBQUEsTUFBQTs7QUFFQSxPQUFBLElBQWEsUUFBTixNQUFBLE1BQUE7RUFDTixXQUFjLFdBQVUsRUFBVixpQkFBNEIsRUFBNUIsWUFBeUMsQ0FBQSxDQUF6QyxpQkFBMkQsSUFBM0QsQ0FBQSxFQUFBO0lBQUMsSUFBQyxDQUFBO0lBQVksSUFBQyxDQUFBO0lBQWlCLElBQUMsQ0FBQTtJQUFZLElBQUMsQ0FBQTtJQUMzRCxJQUFDLENBQUEsTUFBRCxHQUFVO0lBQ1YsSUFBQyxDQUFBLFVBQUQsR0FBYztJQUNkLElBQUMsQ0FBQSxDQUFELEdBQUssSUFBQyxDQUFBLE9BQU8sQ0FBQztJQUNkLElBQUMsQ0FBQSxjQUFELEdBQWtCO0lBQ2xCLElBQUMsQ0FBQSxNQUFELEdBQVUsR0FMRztFQUFBOztFQU9kLElBQU8sQ0FBQSxDQUFBLEVBQUE7QUFDUixRQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsR0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLE9BQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBO0lBQUUsQ0FBQSxHQUFJO0lBQ0osQ0FBQSxHQUFJLElBQUMsQ0FBQTtJQUNMLElBQUEsQ0FBSyxPQUFMO0lBQ0EsU0FBQSxDQUFVLE1BQU0sQ0FBQyxJQUFqQjtJQUNBLElBQUEsQ0FBSyxDQUFMLEVBQU8sRUFBUCxFQUFVLE1BQUEsQ0FBTyxDQUFQLENBQVY7SUFFQSxJQUFBLENBQUssT0FBTDtJQUNBLENBQUEsR0FBSSxDQUFDLENBQUMsVUFBVSxDQUFDLEtBQWIsR0FBcUI7QUFDekI7QUFBQTtJQUFBLEtBQUEscUNBQUE7O01BQ0MsSUFBRyxJQUFB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QUMsQ0FBQSxNQUFsQjtNQUE4QixJQUFDLENBQUEsTUFBRCxHQUFVLElBQUMsQ0FBQSxXQUF6Qzs7SUFDQSxJQUFHLElBQUMsQ0FBQSxVQUFELElBQWUsSUFBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLENBQUMsR0FBOUI7TUFBdUMsSUFBQyxDQUFBLE1BQUQsR0FBVSxJQUFDLENBQUEsVUFBRCxHQUFjLENBQUMsQ0FBQyxHQUFoQixHQUFzQixFQUF2RTs7V0FDQSxLQUFLLENBQUMsY0FBTixDQUFBO0VBTk07O0FBaEREIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZyxwcmludCxyYW5nZSxzY2FsZXgsc2NhbGV5IH0gZnJvbSAnLi9nbG9iYWxzLmpzJyBcclxuXHJcbmV4cG9ydCBjbGFzcyBMaXN0YVxyXG5cdGNvbnN0cnVjdG9yIDogKEBvYmplY3RzPVtdLCBAY29sdW1uVGl0bGVzPVwiXCIsIEBidXR0b25zPXt9LCBAZHJhd0Z1bmN0aW9uPW51bGwpIC0+ICMgYSBsaXN0IG9mIHBsYXllcnMuIE9yIGEgbGlzdCBvZiBwYWlycyBvZiBwbGF5ZXJzXHJcblx0XHRAb2Zmc2V0ID0gMFxyXG5cdFx0QGN1cnJlbnRSb3cgPSAwXHJcblx0XHRATiA9IEBvYmplY3RzLmxlbmd0aFxyXG5cdFx0QHBhaW50WWVsbG93Um93ID0gdHJ1ZVxyXG5cdFx0QGVycm9ycyA9IFtdICMgbGlzdCB3aXRoIGluZGV4IG9mIGVycm9uZW91cyByb3dzXHJcblxyXG5cdGRyYXcgOiAtPiAjIHJpdGFyIGRlIHJhZGVyIHNvbSBzeW5zIGkgZsO2bnN0cmV0IGVuYmFydFxyXG5cdFx0eSA9IDRcclxuXHRcdHMgPSBAY29sdW1uVGl0bGVzXHJcblx0XHRmaWxsICd3aGl0ZSdcclxuXHRcdHRleHRBbGlnbiB3aW5kb3cuTEVGVFxyXG5cdFx0dGV4dCBzLDEwLHNjYWxleSh5KVxyXG5cclxuXHRcdGZpbGwgJ2JsYWNrJ1xyXG5cdFx0ciA9IGcudG91cm5hbWVudC5yb3VuZCAtIDFcclxuXHRcdGZvciBpUm93IGluIHJhbmdlIEBvZmZzZXQsQG9mZnNldCArIGcuTFBQXHJcblx0XHRcdGlmIGlSb3cgPj0gQE4gdGhlbiBjb250aW51ZVxyXG5cdFx0XHRwID0gQG9iamVjdHNbaVJvd11cclxuXHRcdFx0eSsrXHJcblx0XHRcdHMgPSBAZHJhd0Z1bmN0aW9uIHAsIGlSb3dcclxuXHRcdFx0aWYgaVJvdyA9PSBAY3VycmVudFJvd1xyXG5cdFx0XHRcdGZpbGwgJ3llbGxvdydcclxuXHRcdFx0XHR3ID0gaWYgQHBhaW50WWVsbG93Um93IHRoZW4gd2lkdGggZWxzZSBzY2FsZXkoMjMuNClcclxuXHRcdFx0XHRyZWN0IDAsIHNjYWxleSh5IC0gMC41KSwgdywgc2NhbGV5KDEpXHJcblx0XHRcdFx0ZmlsbCAnYmxhY2snXHJcblx0XHRcdGZpbGwgaWYgaVJvdyBpbiBAZXJyb3JzIHRoZW4gJ3JlZCcgZWxzZSAnYmxhY2snXHJcblx0XHRcdHRleHQgcywxMCwgc2NhbGV5KHkpXHJcblxyXG5cdGtleVByZXNzZWQgOiAoZXZlbnQsIGtleSkgLT4gQGJ1dHRvbnNba2V5XS5jbGljaygpXHJcbiNcdG1vdXNlV2hlZWwgOiAoZXZlbnQpIC0+IEBtb3ZlIGlmIGV2ZW50LmRlbHRhIDwgMCB0aGVuIC1nLkxQUC8vMiBlbHNlIGcuTFBQLy8yXHJcblx0bW91c2VXaGVlbCA6IChldmVudCkgLT4gQG1vdmUgaWYgZXZlbnQuZGVsdGEgPCAwIHRoZW4gLTEgZWxzZSAxXHJcblxyXG5cdG1vdXNlUHJlc3NlZCA6IC0+IFxyXG5cdFx0aWYgbW91c2VZID4gc2NhbGV5KDQpXHJcblx0XHRcdEBjdXJyZW50Um93ID0gQG9mZnNldCArIGludCBtb3VzZVkgLyBnLlpPT01bZy5zdGF0ZV0gLSA0LjVcclxuXHRcdGVsc2VcclxuXHRcdFx0Zm9yIGtleSxidXR0b24gb2YgQGJ1dHRvbnNcclxuXHRcdFx0XHRpZiBidXR0b24uYWN0aXZlIGFuZCBidXR0b24uaW5zaWRlIG1vdXNlWCxtb3VzZVkgdGhlbiBidXR0b24uY2xpY2soKVxyXG5cclxuXHRBcnJvd1VwICAgOiAtPiBAbW92ZSAtMVxyXG5cdEFycm93RG93biA6IC0+IEBtb3ZlIDFcclxuXHRQYWdlVXAgICAgOiAtPiBAbW92ZSAtZy5MUFAvLzIgXHJcblx0UGFnZURvd24gIDogLT4gQG1vdmUgZy5MUFAvLzJcclxuXHRIb21lICAgICAgOiAtPiBAbW92ZSAtQGN1cnJlbnRSb3dcclxuXHRFbmQgICAgICAgOiAtPiBAbW92ZSBATiAtIEBjdXJyZW50Um93XHJcblxyXG5cdG1vdmUgOiAoZGVsdGEpIC0+XHJcblx0XHRAY3VycmVudFJvdyArPSBkZWx0YVxyXG5cdFx0aWYgQGN1cnJlbnRSb3cgPCAwIHRoZW4gQGN1cnJlbnRSb3cgPSAwXHJcblx0XHRpZiBAY3VycmVudFJvdyA+PSBATiB0aGVuIEBjdXJyZW50Um93ID0gQE4tMVxyXG5cdFx0aWYgQGN1cnJlbnRSb3cgPCBAb2Zmc2V0IHRoZW4gQG9mZnNldCA9IEBjdXJyZW50Um93XHJcblx0XHRpZiBAY3VycmVudFJvdyA+PSBAb2Zmc2V0ICsgZy5MUFAgdGhlbiBAb2Zmc2V0ID0gQGN1cnJlbnRSb3cgLSBnLkxQUCArIDFcclxuXHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCkiXX0=
//# sourceURL=c:\github\Dense\coffee\lista.coffee