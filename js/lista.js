// Generated by CoffeeScript 2.7.0
import {
  g,
  print,
  range
} from './globals.js';

export var Lista = class Lista {
  constructor(objects = [], columnTitles = "", buttons = {}, drawFunction = null) { // a list of players. Or a list of pairs of players
    this.objects = objects;
    this.columnTitles = columnTitles;
    this.buttons = buttons;
    this.drawFunction = drawFunction;
    this.offset = 0;
    this.currentRow = 0;
    this.N = this.objects.length;
    this.paintYellowRow = true;
  }

  draw() { // ritar de rader som syns i f√∂nstret enbart
    var i, iRow, len, p, r, ref, results, s, w, y;
    y = 4.0 * g.ZOOM[g.state];
    s = this.columnTitles;
    textAlign(window.LEFT);
    text(s, 10, y);
    fill('black');
    r = g.tournament.round - 1;
    ref = range(this.offset, this.offset + g.LPP);
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      iRow = ref[i];
      if (iRow >= this.N) {
        continue;
      }
      p = this.objects[iRow];
      y += g.ZOOM[g.state];
      s = this.drawFunction(p, iRow);
      if (iRow === this.currentRow) {
        fill('yellow');
        // noStroke()
        w = this.paintYellowRow ? width : 23.4 * g.ZOOM[g.state];
        rect(0, y - 0.5 * g.ZOOM[g.state] - 1, w, g.ZOOM[g.state]);
        fill('black');
      }
      results.push(text(s, 10, y));
    }
    return results;
  }

  keyPressed(event, key) {
    return this.buttons[key].click();
  }

  mouseWheel(event) {
    return this.move(event.delta < 0 ? Math.floor(-g.LPP / 2) : Math.floor(g.LPP / 2));
  }

  mousePressed() {
    var button, key, ref, results;
    if (mouseY > 4 * g.ZOOM[g.state]) {
      return this.currentRow = this.offset + int(mouseY / g.ZOOM[g.state] - 4.5);
    } else {
      ref = this.buttons;
      results = [];
      for (key in ref) {
        button = ref[key];
        if (button.active && button.inside(mouseX, mouseY)) {
          results.push(button.click());
        } else {
          results.push(void 0);
        }
      }
      return results;
    }
  }

  ArrowUp() {
    return this.move(-1);
  }

  ArrowDown() {
    return this.move(1);
  }

  PageUp() {
    return this.move(Math.floor(-g.LPP / 2));
  }

  PageDown() {
    return this.move(Math.floor(g.LPP / 2));
  }

  Home() {
    return this.move(-this.currentRow);
  }

  End() {
    return this.move(this.N - this.currentRow);
  }

  move(delta) {
    this.currentRow += delta;
    if (this.currentRow < 0) {
      this.currentRow = 0;
    }
    if (this.currentRow >= this.N) {
      this.currentRow = this.N - 1;
    }
    if (this.currentRow < this.offset) {
      this.offset = this.currentRow;
    }
    if (this.currentRow >= this.offset + g.LPP) {
      this.offset = this.currentRow - g.LPP + 1;
    }
    return event.preventDefault();
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdGEuanMiLCJzb3VyY2VSb290IjoiLi5cXCIsInNvdXJjZXMiOlsiY29mZmVlXFxsaXN0YS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQUE7RUFBUyxDQUFUO0VBQVcsS0FBWDtFQUFpQixLQUFqQjtDQUFBLE1BQUE7O0FBRUEsT0FBQSxJQUFhLFFBQU4sTUFBQSxNQUFBO0VBQ04sV0FBYyxXQUFVLEVBQVYsaUJBQTRCLEVBQTVCLFlBQXlDLENBQUEsQ0FBekMsaUJBQTJELElBQTNELENBQUEsRUFBQTtJQUFDLElBQUMsQ0FBQTtJQUFZLElBQUMsQ0FBQTtJQUFpQixJQUFDLENBQUE7SUFBWSxJQUFDLENBQUE7SUFDM0QsSUFBQyxDQUFBLE1BQUQsR0FBVTtJQUNWLElBQUMsQ0FBQSxVQUFELEdBQWM7SUFDZCxJQUFDLENBQUEsQ0FBRCxHQUFLLElBQUMsQ0FBQSxPQUFPLENBQUM7SUFDZCxJQUFDLENBQUEsY0FBRCxHQUFrQjtFQUpMOztFQU1kLElBQU8sQ0FBQSxDQUFBLEVBQUE7QUFFUixRQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsR0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLE9BQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBO0lBQUUsQ0FBQSxHQUFJLEdBQUEsR0FBTSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFIO0lBQ2hCLENBQUEsR0FBSSxJQUFDLENBQUE7SUFDTCxTQUFBLENBQVUsTUFBTSxDQUFDLElBQWpCO0lBQ0EsSUFBQSxDQUFLLENBQUwsRUFBTyxFQUFQLEVBQVUsQ0FBVjtJQUVBLElBQUEsQ0FBSyxPQUFMO0lBQ0EsQ0FBQSxHQUFJLENBQUMsQ0FBQyxVQUFVLENBQUMsS0FBYixHQUFxQjtBQUN6QjtBQUFBO0lBQUEsS0FBQSxxQ0FBQTs7TUFDQyxJQUFHLElBQUEsSUFBUSxJQUFDLENBQUEsQ0FBWjtBQUFtQixpQkFBbkI7O01BQ0EsQ0FBQSxHQUFJLElBQUMs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QWMsSUFBQyxDQUFBLENBQUQsR0FBRyxFQUEzQzs7SUFDQSxJQUFHLElBQUMsQ0FBQSxVQUFELEdBQWMsSUFBQyxDQUFBLE1BQWxCO01BQThCLElBQUMsQ0FBQSxNQUFELEdBQVUsSUFBQyxDQUFBLFdBQXpDOztJQUNBLElBQUcsSUFBQyxDQUFBLFVBQUQsSUFBZSxJQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsQ0FBQyxHQUE5QjtNQUF1QyxJQUFDLENBQUEsTUFBRCxHQUFVLElBQUMsQ0FBQSxVQUFELEdBQWMsQ0FBQyxDQUFDLEdBQWhCLEdBQXNCLEVBQXZFOztXQUNBLEtBQUssQ0FBQyxjQUFOLENBQUE7RUFOTTs7QUE3Q0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnLHByaW50LHJhbmdlIH0gZnJvbSAnLi9nbG9iYWxzLmpzJyBcclxuXHJcbmV4cG9ydCBjbGFzcyBMaXN0YVxyXG5cdGNvbnN0cnVjdG9yIDogKEBvYmplY3RzPVtdLCBAY29sdW1uVGl0bGVzPVwiXCIsIEBidXR0b25zPXt9LCBAZHJhd0Z1bmN0aW9uPW51bGwpIC0+ICMgYSBsaXN0IG9mIHBsYXllcnMuIE9yIGEgbGlzdCBvZiBwYWlycyBvZiBwbGF5ZXJzXHJcblx0XHRAb2Zmc2V0ID0gMFxyXG5cdFx0QGN1cnJlbnRSb3cgPSAwXHJcblx0XHRATiA9IEBvYmplY3RzLmxlbmd0aFxyXG5cdFx0QHBhaW50WWVsbG93Um93ID0gdHJ1ZVxyXG5cclxuXHRkcmF3IDogLT4gIyByaXRhciBkZSByYWRlciBzb20gc3lucyBpIGbDtm5zdHJldCBlbmJhcnRcclxuXHJcblx0XHR5ID0gNC4wICogZy5aT09NW2cuc3RhdGVdXHJcblx0XHRzID0gQGNvbHVtblRpdGxlc1xyXG5cdFx0dGV4dEFsaWduIHdpbmRvdy5MRUZUXHJcblx0XHR0ZXh0IHMsMTAseVxyXG5cclxuXHRcdGZpbGwgJ2JsYWNrJ1xyXG5cdFx0ciA9IGcudG91cm5hbWVudC5yb3VuZCAtIDFcclxuXHRcdGZvciBpUm93IGluIHJhbmdlIEBvZmZzZXQsQG9mZnNldCArIGcuTFBQXHJcblx0XHRcdGlmIGlSb3cgPj0gQE4gdGhlbiBjb250aW51ZVxyXG5cdFx0XHRwID0gQG9iamVjdHNbaVJvd11cclxuXHRcdFx0eSArPSBnLlpPT01bZy5zdGF0ZV0gXHJcblx0XHRcdHMgPSBAZHJhd0Z1bmN0aW9uIHAsIGlSb3dcclxuXHRcdFx0aWYgaVJvdyA9PSBAY3VycmVudFJvd1xyXG5cdFx0XHRcdGZpbGwgJ3llbGxvdydcclxuXHRcdFx0XHQjIG5vU3Ryb2tlKClcclxuXHRcdFx0XHR3ID0gaWYgQHBhaW50WWVsbG93Um93IHRoZW4gd2lkdGggZWxzZSAyMy40ICogZy5aT09NW2cuc3RhdGVdXHJcblx0XHRcdFx0cmVjdCAwLCB5IC0gMC41ICogZy5aT09NW2cuc3RhdGVdLTEsIHcsIGcuWk9PTVtnLnN0YXRlXVxyXG5cdFx0XHRcdGZpbGwgJ2JsYWNrJ1xyXG5cdFx0XHR0ZXh0IHMsMTAseVxyXG5cclxuXHRrZXlQcmVzc2VkIDogKGV2ZW50LCBrZXkpIC0+IEBidXR0b25zW2tleV0uY2xpY2soKVxyXG5cdG1vdXNlV2hlZWwgOiAoZXZlbnQpIC0+IEBtb3ZlIGlmIGV2ZW50LmRlbHRhIDwgMCB0aGVuIC1nLkxQUC8vMiBlbHNlIGcuTFBQLy8yXHJcblx0bW91c2VQcmVzc2VkIDogLT4gXHJcblx0XHRpZiBtb3VzZVkgPiA0ICogZy5aT09NW2cuc3RhdGVdXHJcblx0XHRcdEBjdXJyZW50Um93ID0gQG9mZnNldCArIGludCBtb3VzZVkgLyBnLlpPT01bZy5zdGF0ZV0gLSA0LjVcclxuXHRcdGVsc2VcclxuXHRcdFx0Zm9yIGtleSxidXR0b24gb2YgQGJ1dHRvbnNcclxuXHRcdFx0XHRpZiBidXR0b24uYWN0aXZlIGFuZCBidXR0b24uaW5zaWRlIG1vdXNlWCxtb3VzZVkgdGhlbiBidXR0b24uY2xpY2soKVxyXG5cclxuXHRBcnJvd1VwICAgOiAtPiBAbW92ZSAtMVxyXG5cdEFycm93RG93biA6IC0+IEBtb3ZlIDFcclxuXHRQYWdlVXAgICAgOiAtPiBAbW92ZSAtZy5MUFAvLzIgXHJcblx0UGFnZURvd24gIDogLT4gQG1vdmUgZy5MUFAvLzJcclxuXHRIb21lICAgICAgOiAtPiBAbW92ZSAtQGN1cnJlbnRSb3dcclxuXHRFbmQgICAgICAgOiAtPiBAbW92ZSBATiAtIEBjdXJyZW50Um93XHJcblxyXG5cdG1vdmUgOiAoZGVsdGEpIC0+XHJcblx0XHRAY3VycmVudFJvdyArPSBkZWx0YVxyXG5cdFx0aWYgQGN1cnJlbnRSb3cgPCAwIHRoZW4gQGN1cnJlbnRSb3cgPSAwXHJcblx0XHRpZiBAY3VycmVudFJvdyA+PSBATiB0aGVuIEBjdXJyZW50Um93ID0gQE4tMVxyXG5cdFx0aWYgQGN1cnJlbnRSb3cgPCBAb2Zmc2V0IHRoZW4gQG9mZnNldCA9IEBjdXJyZW50Um93XHJcblx0XHRpZiBAY3VycmVudFJvdyA+PSBAb2Zmc2V0ICsgZy5MUFAgdGhlbiBAb2Zmc2V0ID0gQGN1cnJlbnRSb3cgLSBnLkxQUCArIDFcclxuXHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCkiXX0=
//# sourceURL=c:\github\Dense\coffee\lista.coffee