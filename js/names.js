// Generated by CoffeeScript 2.7.0
import {
  g,
  print,
  range
} from './globals.js';

import {
  Page
} from './page.js';

import {
  Button,
  spread
} from './button.js';

import {
  Lista
} from './lista.js';

export var Names = class Names extends Page {
  constructor() {
    super();
    this.t = g.tournament;
    this.y = 1.3 * g.ZOOM[g.state];
    this.h = 20;
    this.lista = new Lista();
    this.buttons.n.active = false;
    this.buttons.ArrowLeft = new Button('', '', () => {
      return g.setState(g.TABLES);
    });
    this.buttons.ArrowRight = new Button('', '', () => {
      return g.setState(g.STANDINGS);
    });
  }

  setLista() {
    this.lista = new Lista(this.t.playersByName, "Table Name", this.buttons, (p) => {
      var r, s;
      r = this.t.round - 1;
      s = p.active ? `${str(1 + Math.floor(p.chair / 2)).padStart(3)} ${g.RINGS[p.col[r][0]]} ` : 'pause ';
      return s + g.txtT(p.name, 25, window.LEFT);
    });
    return spread(this.buttons, 0.6 * g.ZOOM[g.state], this.y, this.h);
  }

  mouseWheel(event) {
    return this.lista.mouseWheel(event);
  }

  mousePressed(event) {
    return this.lista.mousePressed(event);
  }

  keyPressed(event) {
    return this.buttons[key].click();
  }

  make(header, players, res) { // players sorterad p√• namn
    var i, j, k, len, len1, p, r, temp;
    return;
    temp = _.clone(players);
    temp.sort(function(a, b) {
      return b[0].eloSum() - a[0].eloSum();
    });
    for (i = j = 0, len = temp.length; j < len; i = ++j) {
      p = temp[i];
      p[0].position = "";
      if (p[0].eloSum() > 0) {
        p[0].position = `#${i + 1}`;
      }
    }
    res.push("NAMES" + header);
    res.push("");
    r = g.tournament.round;
    for (i = k = 0, len1 = players.length; k < len1; i = ++k) {
      p = players[i];
      if (i % this.ppp === 0) {
        res.push("Table Name");
      }
      res.push(`${str(1 + Math.floor(p[1] / 2)).padStart(3)} ${RINGS[p[0].col[r][0]]} ${p[0].name} ${p[0].position}`);
      if (i % this.ppp === this.ppp - 1) {
        res.push("\f");
      }
    }
    return res.push("\f");
  }

  draw() {
    var button, key, results;
    fill('white');
    this.showHeader(g.tournament.round);
    this.lista.draw();
    results = [];
    for (key in this.buttons) {
      button = this.buttons[key];
      results.push(button.draw());
    }
    return results;
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmFtZXMuanMiLCJzb3VyY2VSb290IjoiLi5cXCIsInNvdXJjZXMiOlsiY29mZmVlXFxuYW1lcy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQUE7RUFBUyxDQUFUO0VBQVcsS0FBWDtFQUFpQixLQUFqQjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFTLElBQVQ7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUyxNQUFUO0VBQWdCLE1BQWhCO0NBQUEsTUFBQTs7QUFDQSxPQUFBO0VBQVMsS0FBVDtDQUFBLE1BQUE7O0FBRUEsT0FBQSxJQUFhLFFBQU4sTUFBQSxNQUFBLFFBQW9CLEtBQXBCO0VBRU4sV0FBYyxDQUFBLENBQUE7U0FDYixDQUFBO0lBQ0EsSUFBQyxDQUFBLENBQUQsR0FBSyxDQUFDLENBQUM7SUFDUCxJQUFDLENBQUEsQ0FBRCxHQUFLLEdBQUEsR0FBTSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFIO0lBQ2pCLElBQUMsQ0FBQSxDQUFELEdBQUs7SUFDTCxJQUFDLENBQUEsS0FBRCxHQUFTLElBQUksS0FBSixDQUFBO0lBRVQsSUFBQyxDQUFBLE9BQU8sQ0FBQyxDQUFDLENBQUMsTUFBWCxHQUFvQjtJQUNwQixJQUFDLENBQUEsT0FBTyxDQUFDLFNBQVQsR0FBc0IsSUFBSSxNQUFKLENBQVcsRUFBWCxFQUFlLEVBQWYsRUFBbUIsQ0FBQSxDQUFBLEdBQUE7YUFBTSxDQUFDLENBQUMsUUFBRixDQUFXLENBQUMsQ0FBQyxNQUFiO0lBQU4sQ0FBbkI7SUFDdEIsSUFBQyxDQUFBLE9BQU8sQ0FBQyxVQUFULEdBQXNCLElBQUksTUFBSixDQUFXLEVBQVgsRUFBZSxFQUFmLEVBQW1CLENBQUEsQ0FBQSxHQUFBO2FBQU0sQ0FBQyxDQUFDLFFBQUYsQ0FBVyxDQUFDLENBQUMsU0FBYjtJQUFOLENBQW5CO0VBVFQ7O0VBV2QsUUFBVyxDQUFBLENBQUE7SUFDVixJQUFDLENBQUEsS0FBRCxHQUFTLElBQUksS0FBSixDQUFV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eEMsRUFBQSxDQUFBLENBQTRELENBQUMsQ0FBQyxDQUFELENBQUcsQ0FBQyxJQUFqRSxFQUFBLENBQUEsQ0FBeUUsQ0FBQyxDQUFDLENBQUQsQ0FBRyxDQUFDLFFBQTlFLENBQUEsQ0FBVDtNQUNBLElBQUcsQ0FBQSxHQUFJLElBQUMsQ0FBQSxHQUFMLEtBQVksSUFBQyxDQUFBLEdBQUQsR0FBSyxDQUFwQjtRQUEyQixHQUFHLENBQUMsSUFBSixDQUFTLElBQVQsRUFBM0I7O0lBSEQ7V0FJQSxHQUFHLENBQUMsSUFBSixDQUFTLElBQVQ7RUFoQk07O0VBa0JQLElBQU8sQ0FBQSxDQUFBO0FBQ1IsUUFBQSxNQUFBLEVBQUEsR0FBQSxFQUFBO0lBQUUsSUFBQSxDQUFLLE9BQUw7SUFDQSxJQUFDLENBQUEsVUFBRCxDQUFZLENBQUMsQ0FBQyxVQUFVLENBQUMsS0FBekI7SUFFQSxJQUFDLENBQUEsS0FBSyxDQUFDLElBQVAsQ0FBQTtBQUNBO0lBQUEsS0FBQSxtQkFBQTtNQUNDLE1BQUEsR0FBUyxJQUFDLENBQUEsT0FBTyxDQUFDLEdBQUQ7bUJBQ2pCLE1BQU0sQ0FBQyxJQUFQLENBQUE7SUFGRCxDQUFBOztFQUxNOztBQTNDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGcscHJpbnQscmFuZ2UgfSBmcm9tICcuL2dsb2JhbHMuanMnIFxyXG5pbXBvcnQgeyBQYWdlIH0gZnJvbSAnLi9wYWdlLmpzJyBcclxuaW1wb3J0IHsgQnV0dG9uLHNwcmVhZCB9IGZyb20gJy4vYnV0dG9uLmpzJyBcclxuaW1wb3J0IHsgTGlzdGEgfSBmcm9tICcuL2xpc3RhLmpzJyBcclxuXHJcbmV4cG9ydCBjbGFzcyBOYW1lcyBleHRlbmRzIFBhZ2VcclxuXHJcblx0Y29uc3RydWN0b3IgOiAtPlxyXG5cdFx0c3VwZXIoKVxyXG5cdFx0QHQgPSBnLnRvdXJuYW1lbnRcclxuXHRcdEB5ID0gMS4zICogZy5aT09NW2cuc3RhdGVdXHJcblx0XHRAaCA9IDIwXHJcblx0XHRAbGlzdGEgPSBuZXcgTGlzdGFcclxuXHJcblx0XHRAYnV0dG9ucy5uLmFjdGl2ZSA9IGZhbHNlXHJcblx0XHRAYnV0dG9ucy5BcnJvd0xlZnQgID0gbmV3IEJ1dHRvbiAnJywgJycsICgpID0+IGcuc2V0U3RhdGUgZy5UQUJMRVNcclxuXHRcdEBidXR0b25zLkFycm93UmlnaHQgPSBuZXcgQnV0dG9uICcnLCAnJywgKCkgPT4gZy5zZXRTdGF0ZSBnLlNUQU5ESU5HU1xyXG5cclxuXHRzZXRMaXN0YSA6IC0+XHJcblx0XHRAbGlzdGEgPSBuZXcgTGlzdGEgQHQucGxheWVyc0J5TmFtZSwgXCJUYWJsZSBOYW1lXCIsIEBidXR0b25zLCAocCkgPT5cclxuXHRcdFx0ciA9IEB0LnJvdW5kIC0gMVxyXG5cdFx0XHRzID0gaWYgcC5hY3RpdmUgdGhlbiBcIiN7c3RyKDEgKyBwLmNoYWlyIC8vIDIpLnBhZFN0YXJ0KDMpfSAje2cuUklOR1NbcC5jb2xbcl1bMF1dfSBcIiBlbHNlICdwYXVzZSAnXHJcblx0XHRcdHMgKyBnLnR4dFQgcC5uYW1lLCAyNSwgd2luZG93LkxFRlRcclxuXHJcblx0XHRzcHJlYWQgQGJ1dHRvbnMsIDAuNipnLlpPT01bZy5zdGF0ZV0sIEB5LCBAaFxyXG5cclxuXHRtb3VzZVdoZWVsICAgOiAoZXZlbnQgKS0+IEBsaXN0YS5tb3VzZVdoZWVsIGV2ZW50XHJcblx0bW91c2VQcmVzc2VkIDogKGV2ZW50KSAtPiBAbGlzdGEubW91c2VQcmVzc2VkIGV2ZW50XHJcblx0a2V5UHJlc3NlZCAgIDogKGV2ZW50KSAtPiBAYnV0dG9uc1trZXldLmNsaWNrKClcclxuXHJcblx0bWFrZSA6IChoZWFkZXIscGxheWVycyxyZXMpIC0+ICMgcGxheWVycyBzb3J0ZXJhZCBww6UgbmFtblxyXG5cdFx0cmV0dXJuXHJcblx0XHR0ZW1wID0gXy5jbG9uZSBwbGF5ZXJzXHJcblx0XHR0ZW1wLnNvcnQgKGEsYikgLT4gYlswXS5lbG9TdW0oKSAtIGFbMF0uZWxvU3VtKClcclxuXHJcblx0XHRmb3IgcCxpIGluIHRlbXBcclxuXHRcdFx0cFswXS5wb3NpdGlvbiA9IFwiXCJcclxuXHRcdFx0aWYgcFswXS5lbG9TdW0oKSA+IDAgdGhlbiBwWzBdLnBvc2l0aW9uID0gXCIjI3tpKzF9XCJcclxuXHJcblx0XHRyZXMucHVzaCBcIk5BTUVTXCIgKyBoZWFkZXJcclxuXHRcdHJlcy5wdXNoIFwiXCJcclxuXHRcdHIgPSBnLnRvdXJuYW1lbnQucm91bmRcclxuXHRcdGZvciBwLGkgaW4gcGxheWVyc1xyXG5cdFx0XHRpZiBpICUgQHBwcCA9PSAwIHRoZW4gcmVzLnB1c2ggXCJUYWJsZSBOYW1lXCJcclxuXHRcdFx0cmVzLnB1c2ggXCIje3N0cigxICsgcFsxXS8vMikucGFkU3RhcnQoMyl9ICN7UklOR1NbcFswXS5jb2xbcl1bMF1dfSAje3BbMF0ubmFtZX0gI3twWzBdLnBvc2l0aW9ufVwiIFxyXG5cdFx0XHRpZiBpICUgQHBwcCA9PSBAcHBwLTEgdGhlbiByZXMucHVzaCBcIlxcZlwiXHJcblx0XHRyZXMucHVzaCBcIlxcZlwiXHJcblxyXG5cdGRyYXcgOiAtPlxyXG5cdFx0ZmlsbCAnd2hpdGUnXHJcblx0XHRAc2hvd0hlYWRlciBnLnRvdXJuYW1lbnQucm91bmRcclxuXHJcblx0XHRAbGlzdGEuZHJhdygpXHJcblx0XHRmb3Iga2V5IG9mIEBidXR0b25zXHJcblx0XHRcdGJ1dHRvbiA9IEBidXR0b25zW2tleV1cclxuXHRcdFx0YnV0dG9uLmRyYXcoKSJdfQ==
//# sourceURL=c:\github\Dense\coffee\names.coffee