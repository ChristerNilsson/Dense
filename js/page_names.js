// Generated by CoffeeScript 2.7.0
import {
  g,
  print,
  range
} from './globals.js';

import {
  Page
} from './page.js';

import {
  Button,
  spread
} from './button.js';

import {
  Lista
} from './lista.js';

export var Names = class Names extends Page {
  constructor() {
    super();
    this.t = g.tournament;
    this.y = 1.3 * g.ZOOM[g.state];
    this.h = 20;
    this.lista = new Lista();
    this.buttons.n.active = false;
    this.buttons.ArrowLeft = new Button('', '', () => {
      return g.setState(g.TABLES);
    });
    this.buttons.ArrowRight = new Button('', '', () => {
      return g.setState(g.STANDINGS);
    });
  }

  setLista() {
    this.lista = new Lista(this.t.playersByName, "Table Name", this.buttons, (p) => {
      var r, s;
      r = this.t.round - 1;
      s = p.active ? `${str(1 + Math.floor(p.chair / 2)).padStart(3)} ${g.RINGS[p.col[r][0]]} ` : 'pause ';
      return s + g.txtT(p.name, 25, window.LEFT);
    });
    return spread(this.buttons, 0.6 * g.ZOOM[g.state], this.y, this.h);
  }

  mouseWheel(event) {
    return this.lista.mouseWheel(event);
  }

  mousePressed(event) {
    return this.lista.mousePressed(event);
  }

  keyPressed(event) {
    return this.buttons[key].click();
  }

  make(header, players, res) { // players sorterad p√• namn
    var i, j, k, len, len1, p, r, temp;
    return;
    temp = _.clone(players);
    temp.sort(function(a, b) {
      return b[0].eloSum() - a[0].eloSum();
    });
    for (i = j = 0, len = temp.length; j < len; i = ++j) {
      p = temp[i];
      p[0].position = "";
      if (p[0].eloSum() > 0) {
        p[0].position = `#${i + 1}`;
      }
    }
    res.push("NAMES" + header);
    res.push("");
    r = this.t.round;
    for (i = k = 0, len1 = players.length; k < len1; i = ++k) {
      p = players[i];
      if (i % this.ppp === 0) {
        res.push("Table Name");
      }
      res.push(`${str(1 + Math.floor(p[1] / 2)).padStart(3)} ${RINGS[p[0].col[r][0]]} ${p[0].name} ${p[0].position}`);
      if (i % this.ppp === this.ppp - 1) {
        res.push("\f");
      }
    }
    return res.push("\f");
  }

  draw() {
    var button, key, ref, results;
    fill('white');
    this.showHeader(this.t.round);
    this.lista.draw();
    ref = this.buttons;
    results = [];
    for (key in ref) {
      button = ref[key];
      results.push(button.draw());
    }
    return results;
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZV9uYW1lcy5qcyIsInNvdXJjZVJvb3QiOiIuLlxcIiwic291cmNlcyI6WyJjb2ZmZWVcXHBhZ2VfbmFtZXMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFBO0VBQVMsQ0FBVDtFQUFXLEtBQVg7RUFBaUIsS0FBakI7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUyxJQUFUO0NBQUEsTUFBQTs7QUFDQSxPQUFBO0VBQVMsTUFBVDtFQUFnQixNQUFoQjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFTLEtBQVQ7Q0FBQSxNQUFBOztBQUVBLE9BQUEsSUFBYSxRQUFOLE1BQUEsTUFBQSxRQUFvQixLQUFwQjtFQUVOLFdBQWMsQ0FBQSxDQUFBO1NBQ2IsQ0FBQTtJQUNBLElBQUMsQ0FBQSxDQUFELEdBQUssQ0FBQyxDQUFDO0lBQ1AsSUFBQyxDQUFBLENBQUQsR0FBSyxHQUFBLEdBQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSDtJQUNqQixJQUFDLENBQUEsQ0FBRCxHQUFLO0lBQ0wsSUFBQyxDQUFBLEtBQUQsR0FBUyxJQUFJLEtBQUosQ0FBQTtJQUVULElBQUMsQ0FBQSxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQVgsR0FBb0I7SUFDcEIsSUFBQyxDQUFBLE9BQU8sQ0FBQyxTQUFULEdBQXNCLElBQUksTUFBSixDQUFXLEVBQVgsRUFBZSxFQUFmLEVBQW1CLENBQUEsQ0FBQSxHQUFBO2FBQU0sQ0FBQyxDQUFDLFFBQUYsQ0FBVyxDQUFDLENBQUMsTUFBYjtJQUFOLENBQW5CO0lBQ3RCLElBQUMsQ0FBQSxPQUFPLENBQUMsVUFBVCxHQUFzQixJQUFJLE1BQUosQ0FBVyxFQUFYLEVBQWUsRUFBZixFQUFtQixDQUFBLENBQUEsR0FBQTthQUFNLENBQUMsQ0FBQyxRQUFGLENBQVcsQ0FBQyxDQUFDLFNBQWI7SUFBTixDQUFuQjtFQVRUOztFQVdkLFFBQVcsQ0FBQSxDQUFBO0lBQ1YsSUFBQyxDQUFBLEtBQUQsR0FBUyxJQUFJLEtBQUosQ0FBVSxJQUFDLENBQUEsQ0FBQyxDQUFDLGFBQWIsRUFBNEIsWUFBNUIsRUFBMEMsSUFBQyxDQUFBLE9BQTNDLEVBQW9ELENBQUMsQ0FBRCxDQUFBLEdBQUE7QUFDL0QsVUFBQSxDQUFBLEVBQUE7TUFBRyxDQUFBLEdBQUksSUFBQyxDQUFBLENBQUMsQ0FBQyxLQUFILEdBQVc7TUFDZixDQUFBLEdBQU8sQ0FBQyxDQUFDLE1BQUwsR0FBaUIsQ0FBQSxDQUFBLENBQUcsR0FBQSxDQUFJLENBQUEsY0FBSSxDQUFDLENBQUMsUUFBUyxFQUFuQixDQUFxQixDQUFDLFFBQXRCLENBQStCLENBQS9CLENBQUgsRUFBQSxDQUFBLENBQXdDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFELENBQUcsQ0FBQyxDQUFELENBQVQsQ0FBL0MsRUFBQSxDQUFqQixHQUFzRjthQUMxRixDQUFBLEdBQUksQ0FBQyxDQUFDLElBQUYsQ0FBTyxDQUFDLENBQUMsSUFBVCxFQUFlLEVBQWYsRUFBbUIsTUFBTSxDQUFDLElBQTFCO0lBSHdELENBQXBEO1dBS1QsTUFBQSxDQUFPLElBQUMsQ0FBQSxPQUFSLEVBQWlCLEdBQUEsR0FBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFILENBQTNCLEVBQXNDLElBQUMsQ0FBQSxDQUF2QyxFQUEwQyxJQUFDLENBQUEsQ0FBM0M7RUFOVTs7RUFRWCxVQUFlLENBQUMsS0FBRCxDQUFBO1dBQVcsSUFBQyxDQUFBLEtBQUssQ0FBQyxVQUFQLENBQWtCLEtBQWxCO0VBQVg7O0VBQ2YsWUFBZSxDQUFDLEtBQUQsQ0FBQTtXQUFXLElBQUMsQ0FBQSxLQUFLLENBQUMsWUFBUCxDQUFvQixLQUFwQjtFQUFYOztFQUNmLFVBQWUsQ0FBQyxLQUFELENBQUE7V0FBVyxJQUFDLENBQUEsT0FBTyxDQUFDLEdBQUQsQ0FBSyxDQUFDLEtBQWQsQ0FBQTtFQUFYOztFQUVmLElBQU8sQ0FBQyxNQUFELEVBQVEsT0FBUixFQUFnQixHQUFoQixDQUFBLEVBQUE7QUFDUixRQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQTtBQUFFO0lBQ0EsSUFBQSxHQUFPLENBQUMsQ0FBQyxLQUFGLENBQVEsT0FBUjtJQUNQLElBQUksQ0FBQyxJQUFMLENBQVUsUUFBQSxDQUFDLENBQUQsRUFBRyxDQUFILENBQUE7YUFBUyxDQUFDLENBQUMsQ0FBRCxDQUFHLENBQUMsTUFBTCxDQUFBLENBQUEsR0FBZ0IsQ0FBQyxDQUFDLENBQUQsQ0FBRyxDQUFDLE1BQUwsQ0FBQTtJQUF6QixDQUFWO0lBRUEsS0FBQSw4Q0FBQTs7TUFDQyxDQUFDLENBQUMsQ0FBRCxDQUFHLENBQUMsUUFBTCxHQUFnQjtNQUNoQixJQUFHLENBQUMsQ0FBQyxDQUFELENBQUcsQ0FBQyxNQUFMLENBQUEsQ0FBQSxHQUFnQixDQUFuQjtRQUEwQixDQUFDLENBQUMsQ0FBRCxDQUFHLENBQUMsUUFBTCxHQUFnQixDQUFBLENBQUEsQ0FBQSxDQUFJLENBQUEsR0FBRSxDQUFOLENBQUEsRUFBMUM7O0lBRkQ7SUFJQSxHQUFHLENBQUMsSUFBSixDQUFTLE9BQUEsR0FBVSxNQUFuQjtJQUNBLEdBQUcsQ0FBQyxJQUFKLENBQVMsRUFBVDtJQUNBLENBQUEsR0FBSSxJQUFDLENBQUEsQ0FBQyxDQUFDO0lBQ1AsS0FBQSxtREFBQTs7TUFDQyxJQUFHLENBQUEsR0FBSSxJQUFDLENBQUEsR0FBTCxLQUFZLENBQWY7UUFBc0IsR0FBRyxDQUFDLElBQUosQ0FBUyxZQUFULEVBQXRCOztNQUNBLEdBQUcsQ0FBQyxJQUFKLENBQVMsQ0FBQSxDQUFBLENBQUcsR0FBQSxDQUFJLENBQUEsY0FBSSxDQUFDLENBQUMsQ0FBRCxJQUFLLEVBQWQsQ0FBZ0IsQ0FBQyxRQUFqQixDQUEwQixDQUExQixDQUFILEVBQUEsQ0FBQSxDQUFtQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUQsQ0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFELENBQUcsQ0FBQyxDQUFELENBQVosQ0FBeEMsRUFBQSxDQUFBLENBQTRELENBQUMsQ0FBQyxDQUFELENBQUcsQ0FBQyxJQUFqRSxFQUFBLENBQUEsQ0FBeUUsQ0FBQyxDQUFDLENBQUQsQ0FBRyxDQUFDLFFBQTlFLENBQUEsQ0FBVDtNQUNBLElBQUcsQ0FBQSxHQUFJLElBQUMsQ0FBQSxHQUFMLEtBQVksSUFBQyxDQUFBLEdBQUQsR0FBSyxDQUFwQjtRQUEyQixHQUFHLENBQUMsSUFBSixDQUFTLElBQVQsRUFBM0I7O0lBSEQ7V0FJQSxHQUFHLENBQUMsSUFBSixDQUFTLElBQVQ7RUFoQk07O0VBa0JQLElBQU8sQ0FBQSxDQUFBO0FBQ1IsUUFBQSxNQUFBLEVBQUEsR0FBQSxFQUFBLEdBQUEsRUFBQTtJQUFFLElBQUEsQ0FBSyxPQUFMO0lBQ0EsSUFBQyxDQUFBLFVBQUQsQ0FBWSxJQUFDLENBQUEsQ0FBQyxDQUFDLEtBQWY7SUFFQSxJQUFDLENBQUEsS0FBSyxDQUFDLElBQVAsQ0FBQTtBQUNBO0FBQUE7SUFBQSxLQUFBLFVBQUE7O21CQUNDLE1BQU0sQ0FBQyxJQUFQLENBQUE7SUFERCxDQUFBOztFQUxNOztBQTNDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGcscHJpbnQscmFuZ2UgfSBmcm9tICcuL2dsb2JhbHMuanMnIFxyXG5pbXBvcnQgeyBQYWdlIH0gZnJvbSAnLi9wYWdlLmpzJyBcclxuaW1wb3J0IHsgQnV0dG9uLHNwcmVhZCB9IGZyb20gJy4vYnV0dG9uLmpzJyBcclxuaW1wb3J0IHsgTGlzdGEgfSBmcm9tICcuL2xpc3RhLmpzJyAgXHJcblxyXG5leHBvcnQgY2xhc3MgTmFtZXMgZXh0ZW5kcyBQYWdlXHJcblxyXG5cdGNvbnN0cnVjdG9yIDogLT5cclxuXHRcdHN1cGVyKClcclxuXHRcdEB0ID0gZy50b3VybmFtZW50XHJcblx0XHRAeSA9IDEuMyAqIGcuWk9PTVtnLnN0YXRlXVxyXG5cdFx0QGggPSAyMFxyXG5cdFx0QGxpc3RhID0gbmV3IExpc3RhXHJcblxyXG5cdFx0QGJ1dHRvbnMubi5hY3RpdmUgPSBmYWxzZVxyXG5cdFx0QGJ1dHRvbnMuQXJyb3dMZWZ0ICA9IG5ldyBCdXR0b24gJycsICcnLCAoKSA9PiBnLnNldFN0YXRlIGcuVEFCTEVTXHJcblx0XHRAYnV0dG9ucy5BcnJvd1JpZ2h0ID0gbmV3IEJ1dHRvbiAnJywgJycsICgpID0+IGcuc2V0U3RhdGUgZy5TVEFORElOR1NcclxuXHJcblx0c2V0TGlzdGEgOiAtPlxyXG5cdFx0QGxpc3RhID0gbmV3IExpc3RhIEB0LnBsYXllcnNCeU5hbWUsIFwiVGFibGUgTmFtZVwiLCBAYnV0dG9ucywgKHApID0+XHJcblx0XHRcdHIgPSBAdC5yb3VuZCAtIDFcclxuXHRcdFx0cyA9IGlmIHAuYWN0aXZlIHRoZW4gXCIje3N0cigxICsgcC5jaGFpciAvLyAyKS5wYWRTdGFydCgzKX0gI3tnLlJJTkdTW3AuY29sW3JdWzBdXX0gXCIgZWxzZSAncGF1c2UgJ1xyXG5cdFx0XHRzICsgZy50eHRUIHAubmFtZSwgMjUsIHdpbmRvdy5MRUZUXHJcblxyXG5cdFx0c3ByZWFkIEBidXR0b25zLCAwLjYqZy5aT09NW2cuc3RhdGVdLCBAeSwgQGhcclxuXHJcblx0bW91c2VXaGVlbCAgIDogKGV2ZW50ICktPiBAbGlzdGEubW91c2VXaGVlbCBldmVudFxyXG5cdG1vdXNlUHJlc3NlZCA6IChldmVudCkgLT4gQGxpc3RhLm1vdXNlUHJlc3NlZCBldmVudFxyXG5cdGtleVByZXNzZWQgICA6IChldmVudCkgLT4gQGJ1dHRvbnNba2V5XS5jbGljaygpXHJcblxyXG5cdG1ha2UgOiAoaGVhZGVyLHBsYXllcnMscmVzKSAtPiAjIHBsYXllcnMgc29ydGVyYWQgcMOlIG5hbW5cclxuXHRcdHJldHVyblxyXG5cdFx0dGVtcCA9IF8uY2xvbmUgcGxheWVyc1xyXG5cdFx0dGVtcC5zb3J0IChhLGIpIC0+IGJbMF0uZWxvU3VtKCkgLSBhWzBdLmVsb1N1bSgpXHJcblxyXG5cdFx0Zm9yIHAsaSBpbiB0ZW1wXHJcblx0XHRcdHBbMF0ucG9zaXRpb24gPSBcIlwiXHJcblx0XHRcdGlmIHBbMF0uZWxvU3VtKCkgPiAwIHRoZW4gcFswXS5wb3NpdGlvbiA9IFwiIyN7aSsxfVwiXHJcblxyXG5cdFx0cmVzLnB1c2ggXCJOQU1FU1wiICsgaGVhZGVyXHJcblx0XHRyZXMucHVzaCBcIlwiXHJcblx0XHRyID0gQHQucm91bmRcclxuXHRcdGZvciBwLGkgaW4gcGxheWVyc1xyXG5cdFx0XHRpZiBpICUgQHBwcCA9PSAwIHRoZW4gcmVzLnB1c2ggXCJUYWJsZSBOYW1lXCJcclxuXHRcdFx0cmVzLnB1c2ggXCIje3N0cigxICsgcFsxXS8vMikucGFkU3RhcnQoMyl9ICN7UklOR1NbcFswXS5jb2xbcl1bMF1dfSAje3BbMF0ubmFtZX0gI3twWzBdLnBvc2l0aW9ufVwiIFxyXG5cdFx0XHRpZiBpICUgQHBwcCA9PSBAcHBwLTEgdGhlbiByZXMucHVzaCBcIlxcZlwiXHJcblx0XHRyZXMucHVzaCBcIlxcZlwiXHJcblxyXG5cdGRyYXcgOiAtPlxyXG5cdFx0ZmlsbCAnd2hpdGUnXHJcblx0XHRAc2hvd0hlYWRlciBAdC5yb3VuZFxyXG5cclxuXHRcdEBsaXN0YS5kcmF3KClcclxuXHRcdGZvciBrZXksYnV0dG9uIG9mIEBidXR0b25zXHJcblx0XHRcdGJ1dHRvbi5kcmF3KCkiXX0=
//# sourceURL=c:\github\Dense\coffee\page_names.coffee